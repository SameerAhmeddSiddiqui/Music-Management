<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Desktop/Ex_Files_SQL_EssT/Ex_Files_SQL_EssT/Exercise Files/WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4026"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Track" custom_title="0" dock_id="1" table="4,5:mainTrack"/><dock_state state="000000ff00000000fd00000001000000020000043c000002b6fc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000043c0000012d00ffffff000002580000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="56"/><column index="2" value="280"/><column index="3" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Artist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="51"/><column index="2" value="179"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="74"/><column index="2" value="78"/><column index="3" value="101"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="156"/><column index="7" value="54"/><column index="8" value="117"/><column index="9" value="85"/><column index="10" value="156"/><column index="11" value="148"/><column index="12" value="234"/><column index="13" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="54"/><column index="2" value="148"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="62"/><column index="2" value="76"/><column index="3" value="156"/><column index="4" value="300"/><column index="5" value="156"/><column index="6" value="72"/><column index="7" value="117"/><column index="8" value="105"/><column index="9" value="62"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="85"/><column index="2" value="64"/><column index="3" value="53"/><column index="4" value="59"/><column index="5" value="56"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="61"/><column index="2" value="210"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PlaylistTrack" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="63"/><column index="2" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="51"/><column index="2" value="195"/><column index="3" value="58"/><column index="4" value="83"/><column index="5" value="56"/><column index="6" value="241"/><column index="7" value="76"/><column index="8" value="85"/><column index="9" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/*
Created by:Sameer
Date : 27-3-25
Query: TO List all tracks by their artist,in order of the ArtistId.
*/

SELECT
ar.Name,
t.Name AS TrackName,
ar.ArtistId


FROM Track AS t
INNER JOIN Album AS a ON a.AlbumId = t.AlbumId 
INNER JOIN Artist as ar ON ar.ArtistId = a.ArtistId

ORDER BY 
ar.ArtistId</sql><sql name="SQL 2">/*
Created by:Sameer
Date : 27-3-25
Query: To count the number of tracks by each artist.
*/

SELECT
ar.ArtistId,
ar.Name,
count(t.name) AS NumberOfTracks



FROM Track AS t
INNER JOIN Album AS a ON a.AlbumId = t.AlbumId 
INNER JOIN Artist as ar ON ar.ArtistId = a.ArtistId

GROUP BY
ar.ArtistId</sql><sql name="SQL 3">/*
Created by:Sameer
Date : 27-3-25
Query: To Find the total revenue by City.
*/

SELECT
BillingCity AS City,
total(total) AS TotalRevenue
FROM Invoice
GROUP BY 
BillingCity</sql><sql name="SQL 4">/*
Created by:Sameer
Date : 27-3-25
Query: To Find the top 10 tracks by sales and the amount generated 
*/
SELECT
t.Name,
total(i.UnitPrice) AS RevenueGenerated

FROM InvoiceLine as i
INNER JOIN Track as t ON t.TrackId = i.TrackId
GROUP BY
t.Name
ORDER BY 
total(i.UnitPrice) DESC
LIMIT 10</sql><sql name="SQL 5">/*
Created by:Sameer
Date : 27-3-25
Query: To Find songs longer than 10 minutes 
*/
SELECT
Name,
Milliseconds
FROM Track
WHERE Milliseconds &gt; 600000
ORDER BY 
Milliseconds
</sql><sql name="SQL 6">/*
Created by:Sameer
Date : 27-3-25
Query: Total length of each Playlist in minutes
*/
SELECT
pt.PlaylistId,
p.Name,
round((sum(t.Milliseconds)/60000)) AS [Total Time In Minutes]
FROM PlaylistTrack AS pt
INNER JOIN Playlist AS p ON pt.PlaylistId = p.PlaylistId
INNER JOIN Track as t ON pt.TrackId = t.TrackId
GROUP BY 
p.Name
ORDER BY 
pt.PlaylistId</sql><sql name="SQL 7">/*
Created by:Sameer
Date : 27-3-25
Query: Top 5 customers
*/
SELECT 
c.CustomerId,
c.FirstName,
c.LastName,
sum(i.total)
FROM Customer AS c
INNER JOIN Invoice AS i ON i.CustomerId = c.CustomerId
GROUP BY 
c.CustomerId
ORDER BY 
sum(i.total) DESC
LIMIT 5</sql><sql name="SQL 8">/*
Created by:Sameer
Date : 27-3-25
Query: Sorting tracks by Genre
*/
SELECT
g.GenreId,
g.Name AS Genre,
t.Name AS TrackName

FROM Genre AS g
INNER JOIN Track as t ON g.GenreId = t.GenreId
GROUP BY 
t.Name
ORDER BY 
g.GenreId</sql><sql name="SQL 9">/*
Created by:Sameer
Date : 27-3-25
Query: Finding the total purchase in cities starting with 'B'
*/
SELECT
BillingCity,
sum(total) AS total
FROM Invoice
WHERE
BillingCity LIKE &quot;B%&quot;
GROUP BY 
BillingCity
ORDER BY BillingCity</sql><sql name="SQL 10*">/*
Created by:Sameer
Date : 27-3-25
Query: Tracks That have not been bought
*/
SELECT
t.TrackId,
t.Name AS TrackName

FROM Track AS t
WHERE 
t.TrackId NOT IN 
(SELECT
DISTINCT
i.TrackId
FROM InvoiceLine AS i)
</sql><sql name="SQL 11*">/*
Created by:Sameer
Date : 27-3-25
Query: Customers Who spent more than average
*/

SELECT
c.CustomerId,
c.FirstName || &quot; &quot; || c.LastName AS Fullname,
i.total
FROM Invoice as i
INNER JOIN Customer as c ON i.CustomerId = c.CustomerId
WHERE i.total &gt;
(SELECT
round(AVG(total))
FROM Invoice)
ORDER BY
i.total</sql><current_tab id="10"/></tab_sql></sqlb_project>
